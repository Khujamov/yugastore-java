#   Copyright 2020 YugabyteDB Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

#################################################################################################
#     #                                                                                          
 #   #  #    #  ####    ##    ####  #####  ####  #####  ######            #   ##   #    #   ##   
  # #   #    # #    #  #  #  #        #   #    # #    # #                 #  #  #  #    #  #  #  
   #    #    # #      #    #  ####    #   #    # #    # #####  #####      # #    # #    # #    # 
   #    #    # #  ### ######      #   #   #    # #####  #                 # ###### #    # ###### 
   #    #    # #    # #    # #    #   #   #    # #   #  #            #    # #    #  #  #  #    # 
   #     ####   ####  #    #  ####    #    ####  #    # ######        ####  #    #   ##   #    # 
                                                                                                 
#################################################################################################
# This file defines the services, service accounts, and 
# deployments for Yugastore-java: Retail marketplace microservices project.
#
# To apply all the yugastore microservices , their corresponding service accounts, and deployments:
#
#   kubectl apply -f k8s-deployment/microservices/yugastore.yaml
#
# Alternatively, you can deploy any resource separately:
#
#   kubectl apply -f k8s-deployment/microservices/yugastore.yaml -l service=cart-microservice # cart service
#   kubectl apply -f k8s-deployment/microservices/yugastore.yaml -l app=cart,version=v2 # cart-v2 Deployment
##################################################################################################

##################################################################################################
# Cart Microservice
##################################################################################################
kind: ConfigMap
apiVersion: v1
metadata:
  name: cart-microservice-v1-properties
data:
  spring.datasource.url: jdbc:postgresql://yb-tservers.yb-demo.svc.cluster.local:5433/postgres
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: cart-microservice-v2-properties
data:
  yugabyte.sql.datasource.url: jdbc:postgresql://yb-tservers.yb-demo.svc.cluster.local:5433/postgres
---
apiVersion: v1
kind: Service
metadata:
  name: cart-microservice
spec:
  selector:
    app: cart
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart-microservice-v1
  labels:
    app: cart
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cart
      version: v1
  template:
    metadata:
      labels:
        app: cart
        version: v1
    spec:
      containers:
      - name: cart
        image: nchandrappa/cart-microservice-v1:latest
        envFrom:
        - configMapRef:
            name: cart-microservice-v1-properties
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart-microservice-v2
  labels:
    app: cart
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cart
      version: v2
  template:
    metadata:
      labels:
        app: cart
        version: v2
    spec:
      containers:
      - name: cart
        image: nchandrappa/cart-microservice:latest
        envFrom:
        - configMapRef:
            name: cart-microservice-v2-properties
        ports:
        - containerPort: 8080
---
##################################################################################################
# products microservice
##################################################################################################
kind: ConfigMap
apiVersion: v1
metadata:
  name: products-microservice-properties
data:
  spring.data.cassandra.keyspace-name: cronos
  spring.data.cassandra.contact-points: yb-tservers.yb-demo.svc.cluster.local
  spring.data.cassandra.port: "9042"
---
apiVersion: v1
kind: Service
metadata:
  name: products-microservice
spec:
  selector:
    app: products
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: products-microservice
  labels:
    app: products
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: products
      version: v1
  template:
    metadata:
      labels:
        app: products
        version: v1
    spec:
      containers:
      - name: products
        image: nchandrappa/products-microservice:latest
        envFrom:
        - configMapRef:
            name: products-microservice-properties
        ports:
        - containerPort: 8080
---
##################################################################################################
# checkout microservice
##################################################################################################
kind: ConfigMap
apiVersion: v1
metadata:
  name: checkout-microservice-properties
data:
  spring.data.cassandra.keyspace-name: cronos
  spring.data.cassandra.contact-points: yb-tservers.yb-demo.svc.cluster.local
  spring.data.cassandra.port: "9042"
---
apiVersion: v1
kind: Service
metadata:
  name: checkout-microservice
spec:
  selector:
    app: checkout
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkout-microservice
  labels:
    app: checkout
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: checkout
      version: v1
  template:
    metadata:
      labels:
        app: checkout
        version: v1
    spec:
      containers:
      - name: checkout
        image: nchandrappa/checkout-microservice:latest
        envFrom:
        - configMapRef:
            name: checkout-microservice-properties
        ports:
        - containerPort: 8080
---
##################################################################################################
# API Gateway microservice
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
spec:
  selector:
    app: gateway
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  labels:
    app: gateway
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
      version: v1
  template:
    metadata:
      labels:
        app: gateway
        version: v1
    spec:
      containers:
      - name: gateway
        image: nchandrappa/api-gateway:latest
        ports:
        - containerPort: 8080
---
##################################################################################################
# Yugastore UI
##################################################################################################
kind: ConfigMap
apiVersion: v1
metadata:
  name: yugastore-ui-properties
data:
  cronos.yugabyte.api: http://api-gateway.default.svc.cluster.local:8080/api/v1/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yugastore-retailapp-ui
  labels:
    app: ui
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ui
      version: v1
  template:
    metadata:
      labels:
        app: ui
        version: v1
    spec:
      containers:
      - name: sappho-retailapp-ui
        image: nchandrappa/sappho-retailapp-ui
        envFrom:
        - configMapRef:
            name: yugastore-ui-properties
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: yugastore-ui
spec:
  selector:
    app: ui
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---